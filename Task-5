import os

# Step 1: Define the Task class
class Task:
    def __init__(self, title, description):
        self.title = title
        self.description = description

    def __str__(self):
        return f"Title: {self.title}, Description: {self.description}"

# File to store tasks
TASKS_FILE = "tasks.txt"

# Step 1: Function to save tasks to a file
def save_tasks_to_file():
    try:
        with open(TASKS_FILE, 'w') as file:
            for task in tasks:
                file.write(f"{task.title}|{task.description}\n")
        print("Tasks saved successfully.")
    except IOError:
        print("Error saving tasks to file.")

# Step 1: Function to load tasks from a file
def load_tasks_from_file():
    try:
        if os.path.exists(TASKS_FILE):
            with open(TASKS_FILE, 'r') as file:
                for line in file:
                    title, description = line.strip().split('|')
                    tasks.append(Task(title, description))
        else:
            print("No existing tasks file found.")
    except (IOError, ValueError):
        print("Error reading tasks from file.")

# Step 2: Function to create a new task
def create_task():
    title = input("Enter task title: ")
    description = input("Enter task description: ")
    task = Task(title, description)
    tasks.append(task)
    save_tasks_to_file()
    print("Task added successfully!")

# Step 3: Function to read and display all tasks
def display_tasks():
    if not tasks:
        print("No tasks available.")
    else:
        for i, task in enumerate(tasks, start=1):
            print(f"{i}. {task}")

# Step 4: Function to update a task
def update_task():
    display_tasks()
    if tasks:
        try:
            task_id = int(input("Enter the task number to update: ")) - 1
            if 0 <= task_id < len(tasks):
                new_title = input("Enter new title: ")
                new_description = input("Enter new description: ")
                tasks[task_id].title = new_title
                tasks[task_id].description = new_description
                save_tasks_to_file()
                print("Task updated successfully!")
            else:
                print("Invalid task number.")
        except ValueError:
            print("Invalid input. Please enter a number.")

# Step 5: Function to delete a task
def delete_task():
    display_tasks()
    if tasks:
        try:
            task_id = int(input("Enter the task number to delete: ")) - 1
            if 0 <= task_id < len(tasks):
                tasks.pop(task_id)
                save_tasks_to_file()
                print("Task deleted successfully!")
            else:
                print("Invalid task number.")
        except ValueError:
            print("Invalid input. Please enter a number.")

# Step 6: Main application loop with task persistence
def task_manager():
    load_tasks_from_file()  # Load tasks at the start of the program

    while True:
        print("\nTask Manager")
        print("1. Create Task")
        print("2. View Tasks")
        print("3. Update Task")
        print("4. Delete Task")
        print("5. Exit")

        choice = input("Enter your choice: ")
        if choice == "1":
            create_task()
        elif choice == "2":
            display_tasks()
        elif choice == "3":
            update_task()
        elif choice == "4":
            delete_task()
        elif choice == "5":
            print("Exiting Task Manager.")
            break
        else:
            print("Invalid choice. Please try again.")

# List to store tasks
tasks = []

# Step 3: Run the Task Manager application
task_manager()
